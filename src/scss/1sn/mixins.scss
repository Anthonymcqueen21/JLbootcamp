@mixin banner{
	width: 100%;
	position: relative;
	color: white;
	.banner-content{
		position: absolute;
		top: 50px;
		width: 100%;
	}
	img{
		width: 100%;
	}
	span{
		font-size: $bannerHeading;
		display: block;
		text-transform: uppercase;
		font-weight: bold;
		@include mediaQuery(3000px, 1024px){
			font-size: 5em;
			color: black;
		}
	}
	span.title{
		font-weight: normal;
		margin-bottom: 10px;
	}
	span.sub-title{
		font-weight: normal;
		margin-bottom: 30px;
	}
} // end @mixin banner

@mixin clearFix{
	&::after{
		content: '';
		display: block;
		// clear: "left" okay, "right" not okay
		clear: both;
	}
} 

@mixin grid($columns, $margin){
	float: left;
	// separate columns apart
	margin-right: $margin;
	margin-bottom: $margin;
	// equally spreads elements on each row
	width: ((100% - (($columns - 1) * $margin)) / $columns);
	// assigns "margin-right:0" to the last child on each row.
	&:nth-child(#{$columns}n){
		margin-right: 0;
	}
}

// "...": doesn't specify how many arguments we'll have in this mixin
@mixin mediaQuery($arg...){
	@if length($arg) == 1 {
		@media screen and (max-width: nth($arg, 1)){
			// allows us to define a mixin when we use them
			@content;
		}
	}
	@if length($arg) == 2 {
		@media screen and (max-width: nth($arg, 1)) and (min-width: nth($arg, 2)){
			@content;
		}
	}
}